{
  "name": "mcp-test-project",
  "version": "1.0.0",
  "description": "Test project for MCP tool testing",
  "scripts": {
    "test": "echo 'Running tests...' && sleep 1 && echo 'Tests passed!'",
    "dev": "echo 'Starting development server...' && sleep 2 && echo 'Server running on port 3000'",
    "build": "echo 'Building project...' && sleep 1 && echo 'Build complete!'",
    "lint": "echo 'Linting code...' && echo 'No lint errors found'",
    "echo-test": "echo 'Hello from echo-test script'",
    "sleep-short": "sleep 1 && echo 'Short sleep done'",
    "sleep-long": "sleep 5 && echo 'Long sleep done'",
    "error-test": "echo 'Starting error test' && exit 1",
    "multi-line": "echo 'Line 1' && echo 'Line 2' && echo 'Line 3'",
    "with-error-output": "echo 'Normal output' && >&2 echo 'Error output' && echo 'More normal output'",
    "infinite-loop": "while true; do echo 'Looping...'; sleep 1; done",
    "json-output": "echo '{\"status\": \"ok\", \"data\": [1, 2, 3]}'",
    "ansi-colors": "echo '\u001b[31mRed text\u001b[0m \u001b[32mGreen text\u001b[0m \u001b[34mBlue text\u001b[0m'",
    "unicode-test": "echo 'ðŸš€ Starting... âœ… Done! ä¸­æ–‡æµ‹è¯•'",
    "env-test": "echo \"NODE_ENV=$NODE_ENV\" && echo \"PATH=$PATH\"",
    "args-test": "echo 'Arguments:' && echo \"$@\"",
    "concurrent-1": "echo 'Concurrent task 1' && sleep 2 && echo 'Task 1 done'",
    "concurrent-2": "echo 'Concurrent task 2' && sleep 2 && echo 'Task 2 done'",
    "fast-output": "for i in {1..10}; do echo \"Fast line $i\"; done",
    "slow-output": "for i in {1..5}; do echo \"Slow line $i\"; sleep 1; done",
    "exit-zero": "echo 'Exiting with 0' && exit 0",
    "exit-one": "echo 'Exiting with 1' && exit 1",
    "exit-two": "echo 'Exiting with 2' && exit 2",
    "pre-test": "echo 'Running pre-test hook'",
    "post-test": "echo 'Running post-test hook'",
    "test:unit": "echo 'Running unit tests'",
    "test:integration": "echo 'Running integration tests'",
    "clean": "echo 'Cleaning build artifacts'",
    "start": "echo 'Starting application' && sleep 10 && echo 'Application stopped'"
  },
  "devDependencies": {},
  "dependencies": {}
}